<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAasr/GGTN
        /z1lzf9MZsz/S2TN/z1mzP8ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAID//wJnzv9DZsz/kWbM
        /+BmzP//Zsz//2bM//9mzP//Zsz//2bM//9mzP/lZsz/oGXL/0mA//8CAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABny/9ZZsz/2GbM
        //9mzP//Zsz//2bM//9mzP//Zsz//2bM//9mzP//Zsz//2bM//9mzP//Zsz//2bM/85nzf9IAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmzP8ZZcz/umbM
        //9mzP//Zsz//2fM//9q0f//bdT//2/X//9x2P//cNj//2/X//9t1P//atH//2fM//9mzP//Zsz//2bM
        //9nzP+4Zsz/GQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaMvFLGrL
        s7VqzKbPacuyyW3S6Ohw1///dd7//3be//923v//dt7//3be//923v//dt7//3be//923v//dd7//3DW
        //9sh+7OaVrd2WlX3O5pX97DbWfeLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHLJ
        nS9rzJ7ua8yd/3DOoP+B2q3/iuC1/3bb7/V23v//dt7//3be//923v//dt7//3be//923v//dt7//3be
        //923v//c5r08XRm8v9wYer/a1jd/2lW2/9pVtvwa1PbKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        gv/0vIL/8rqA++22gA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABVVf8DcmTv+HRm8v90ZvL/dGby/3Rm8v90ZvL/dGby/3Rl8PsAAAAAAAAAAPC3fdn0vIL/9LyC//S8
        gv/0vIL/9LyC//S8gv/0vIL/8LZ8vQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAI91z5TBmKfr26mT78Sapu2FceD8dGby/3Rm8v90ZvL/cWHs1wAAAAAAAAAA8LV8efS8
        gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/7bV6jgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADttHl087qB/fS8gv/0vIL/9LyC//K7gv+ReNX3dGby/3Rm8v9vYOh4AAAAAAAA
        AAD/gIAE87mA+PS8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/8Ld8v+qqgAwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/v4AI77Z6r/O7gf/0vIL/9LyC//S8gv/0vIL/9LyC/+64hfp0ZvL/c2Tu91VV
        /wMAAAAAAAAAAAAAAADvtnqQ9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/8rqA/PC2
        e7zvtnpi7696MO22eSrutXpa8Lh9tvO5f/n0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC/4Rw
        3/pvXueKAAAAAAAAAAAAAAAAAAAAAP///wHxuH7p9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8
        gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8
        gv/0vIL/hG3b1QAA/wEAAAAAAAAAAAAAAAAAAAAAAAAAAPS1ejDzuoH99LyC//S8gv/0vIL/9LyC//S8
        gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8
        gv/0vIL/9LyC/++4gfV4aeEiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO61eFn0vIL+9LyC//S8
        gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8
        gv/0vIL/9LyC//S8gv/zu4H+67N9WgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO20
        fGPyuoD99LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8
        gv/0vIL/9LyC//S8gv/0vIL/87qA/e6ze1sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOu0eDPyuX7v9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8
        gv/0vIL/9LyC//S8gv/0vIL/9LyC//C4fe3ws3oyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAHwtnqX87mA+/S8gv/0vIL/9LyC//S8gv/0vIL/9LyC//S8
        gv/0vIL/9LyC//S8gv/0vIL/9LyC//K6gPrutHmW//+AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/qoAG7bN6gO+3fODyuoD99LyC//S8
        gv/0vIL/9LyC//S8gv/0vIL/87qA/fC3fd7vtHmB/7aSBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADytHc667J5Z+60e4XttnqC77N6b+uxezQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf//+AAf//AAD//AAAP/gAAB/wAAAP4AAAB+AAAAfAAAADgAfgAYAf
        +AGAP/wBgD/8AQB//gAAf/4AAH/+AAB//gAAf/4AAH/+AIA//AGAP/wBgB/4AYAH4AHAAAADwAAAA+AA
        AAfwAAAP+AAAH/wAAD/+AAB//4AB///4H/8=
</value>
  </data>
</root>